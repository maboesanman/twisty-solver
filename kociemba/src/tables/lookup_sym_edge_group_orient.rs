use std::path::Path;

use anyhow::Result;
use memmap2::Mmap;
use rayon::prelude::*;

use crate::{
    cube_ops::{
        coords::{EdgeGroupOrientRawCoord, EdgeGroupOrientSymCoord},
        cube_sym::DominoSymmetry,
        edge_group_orient_combo_coord::EdgeGroupOrientComboCoord,
        partial_reprs::edge_group_orient::EdgeGroupOrient,
    },
    tables::table_loader::{as_u32_slice, collect_unique_sorted_parallel},
};

use super::table_loader::{as_u32_slice_mut, load_table};

const TABLE_SIZE_BYTES: usize = 64430 * 4;
const FILE_CHECKSUM: u32 = 4005177882;

static STABILIZING_CONJUGATIONS: phf::Map<u16, u16> = phf::phf_map! {
    124 | 122 | 125 | 127 => 16905,
    59926 | 92 | 59955 | 59620 | 59735 | 59731 | 59922 | 96 | 59624 | 59951 => 13107,
    59901 | 59905 | 59790 | 167 | 171 | 59786 => 12291,
    25 => 153,
    63202 | 63864 | 63334 | 63630 | 63901 | 63432 | 62846 | 62850 | 63830 | 63592 | 63597 | 63834 | 62972 | 63796 | 63204 | 63746 | 63884 | 62851 | 62976 | 63694 | 63519 | 63887 | 63898 | 63634 | 169 | 63433 | 63094 | 63095 | 63338 | 63205 | 63632 | 63514 | 63200 | 63794 | 59848 | 59845 | 59847 | 63090 | 63594 | 63697 | 59903 | 59843 | 63596 | 59788 | 63832 | 62848 | 63792 | 63748 | 63516 | 63865 | 63336 | 63751 | 63635 | 63428 | 63835 | 63882 | 63900 | 63692 | 63860 | 63430 | 63696 | 63339 | 63896 | 63797 | 63862 | 62974 | 63886 | 63092 | 63750 | 63518 | 62977 => 4097,
    11268 | 10803 | 11543 | 17271 | 59830 | 11343 | 11458 | 11010 | 18787 | 17275 | 19047 | 132 | 10799 | 11459 | 59833 | 10908 | 18559 | 11594 | 11408 | 11454 | 11504 | 34 | 10692 | 19046 | 11412 | 10689 | 16878 | 11500 | 11113 | 11413 | 16879 | 17371 | 11338 | 11501 | 11576 | 18786 | 18791 | 11595 | 11272 | 11273 | 16874 | 11014 | 11539 | 17106 | 59943 | 11577 | 11409 | 133 | 59671 | 11538 | 59829 | 10555 | 11605 | 11542 | 11580 | 11269 | 128 | 11604 | 10913 | 10693 | 11117 | 11112 | 18555 | 11505 | 11190 | 11591 | 17107 | 18558 | 10909 | 18554 | 17110 | 18790 | 17111 | 17366 | 10798 | 19051 | 11339 | 10558 | 11195 | 18954 | 11608 | 11015 | 11116 | 11590 | 10559 | 11342 | 11581 | 10554 | 10802 | 17274 | 129 | 10688 | 11455 | 11194 | 11609 | 17370 | 11191 | 59834 | 18955 | 17270 | 11011 | 18951 | 16875 | 19050 | 18950 | 17367 | 10912 => 257,
    23 | 26 => 255,
    10437 | 62768 | 10115 | 19045 | 62843 | 30 | 9595 | 18553 | 22764 | 19040 | 62810 | 18548 | 62583 | 62488 | 18550 | 22767 | 9832 | 18866 | 23002 | 9830 | 22330 | 9827 | 59822 | 10510 | 62845 | 10031 | 22669 | 17229 | 9470 | 17100 | 10534 | 22208 | 17263 | 62487 | 10200 | 10116 | 9469 | 23287 | 59665 | 62666 | 23006 | 23285 | 62585 | 62484 | 17383 | 10474 | 10195 | 59823 | 23286 | 23214 | 18549 | 18666 | 23170 | 59898 | 10546 | 10388 | 23212 | 17360 | 10441 | 9600 | 10387 | 10119 | 17044 | 10333 | 59937 | 22672 | 10201 | 22333 | 23127 | 23249 | 22937 | 18867 | 23129 | 9935 | 22331 | 22670 | 10194 | 22569 | 22456 | 17382 | 23268 | 28 | 23008 | 59826 | 62482 | 22851 | 10551 | 23267 | 10513 | 126 | 22202 | 62702 | 62483 | 22336 | 22762 | 62668 | 22852 | 16869 | 23266 | 18782 | 22562 | 17267 | 17365 | 23283 | 9716 | 9717 | 17340 | 17361 | 10536 | 62586 | 59939 | 22768 | 22668 | 18999 | 17264 | 22763 | 23171 | 10475 | 22854 | 10508 | 23176 | 22931 | 10120 | 62305 | 10332 | 62309 | 62667 | 19039 | 23172 | 23243 | 62767 | 10511 | 22769 | 23069 | 62766 | 10269 | 9718 | 62582 | 10435 | 22457 | 10479 | 10029 | 62669 | 62813 | 22205 | 18998 | 17262 | 62427 | 59667 | 23244 | 10268 | 62812 | 62426 | 62584 | 16987 | 9597 | 17265 | 16867 | 10334 | 10393 | 22667 | 22853 | 10506 | 10267 | 62302 | 9468 | 59768 | 18778 | 23270 | 19042 | 9471 | 18946 | 9599 | 18551 | 23242 | 10028 | 22204 | 22453 | 22568 | 9715 | 18908 | 17101 | 17364 | 10439 | 23216 | 62708 | 23070 | 10552 | 19021 | 62809 | 10335 | 10386 | 16797 | 10507 | 22455 | 9467 | 17318 | 62489 | 23213 | 62808 | 10436 | 23007 | 62308 | 23004 | 62709 | 22563 | 62842 | 10121 | 9933 | 9473 | 23003 | 18945 | 22337 | 10438 | 22932 | 18947 | 22930 | 23122 | 62834 | 10480 | 22935 | 9720 | 10478 | 10477 | 10027 | 163 | 62844 | 17098 | 10331 | 16870 | 62769 | 17228 | 23125 | 23072 | 23246 | 10391 | 23269 | 123 | 9466 | 22765 | 62763 | 17045 | 22934 | 17269 | 19020 | 9833 | 59825 | 23174 | 23177 | 9831 | 19043 | 10337 | 23175 | 10389 | 17186 | 22933 | 9934 | 10531 | 10272 | 10476 | 18667 | 23247 | 62704 | 17359 | 10198 | 10032 | 23066 | 59821 | 10509 | 9596 | 17103 | 23211 | 10270 | 10533 | 22856 | 23073 | 10033 | 9932 | 10537 | 19062 | 9828 | 10197 | 22332 | 18547 | 10532 | 18476 | 23282 | 18949 | 9601 | 18477 | 23123 | 10553 | 10530 | 62703 | 23273 | 62707 | 18552 | 22334 | 62485 | 22203 | 10390 | 9719 | 23248 | 62587 | 23289 | 62486 | 23288 | 62806 | 62764 | 18785 | 9714 | 18909 | 23217 | 9826 | 22566 | 9472 | 18780 | 19041 | 23071 | 22673 | 18942 | 22565 | 16986 | 9931 | 10548 | 22206 | 62837 | 62306 | 22850 | 19038 | 16868 | 22671 | 22454 | 10481 | 16872 | 10549 | 9936 | 10196 | 62428 | 10512 | 19044 | 17102 | 59824 | 18944 | 22936 | 9829 | 22855 | 18784 | 18943 | 9930 | 10117 | 9594 | 23215 | 22209 | 22857 | 18948 | 23124 | 62807 | 10266 | 17104 | 17268 | 9721 | 9598 | 62836 | 22335 | 16873 | 59827 | 23173 | 10535 | 22564 | 23210 | 22207 | 10330 | 10434 | 22451 | 10440 | 62429 | 17363 | 10550 | 18781 | 18546 | 23009 | 10392 | 23126 | 23128 | 18779 | 164 | 17362 | 59828 | 62303 | 10118 | 22666 | 10271 | 16871 | 62589 | 18724 | 18725 | 23068 | 23245 | 62588 | 17187 | 22766 | 62811 | 62765 | 10273 | 23067 | 23005 | 17266 | 17105 | 10199 | 59769 | 9937 | 18783 | 22567 | 62835 | 17358 | 19063 | 62706 | 62304 | 17319 | 23284 | 22452 | 10114 | 17341 | 59897 | 62705 | 16866 | 10026 | 23271 | 10547 | 10336 | 22450 | 16796 | 62307 | 23272 | 17099 | 62762 | 10030 => 513,
    59853 | 24326 | 64037 | 24036 | 24149 | 24040 | 64345 | 64412 | 24317 | 64180 | 23962 | 64346 | 64283 | 64394 | 64035 | 64177 | 24148 | 64413 | 23539 | 64130 | 59854 | 64396 | 24147 | 64341 | 23427 | 24236 | 59904 | 24195 | 24079 | 24329 | 24277 | 64132 | 23885 | 64427 | 23958 | 64414 | 23295 | 170 | 64036 | 24330 | 23648 | 59789 | 24144 | 24278 | 24041 | 23293 | 24343 | 23424 | 24078 | 64182 | 59852 | 24240 | 23294 | 24345 | 59673 | 64389 | 24344 | 63907 | 24315 | 24239 | 23538 | 64181 | 23649 | 24241 | 23778 | 24312 | 24074 | 23429 | 23883 | 64279 | 64344 | 63906 | 23534 | 23783 | 36 | 64387 | 63905 | 24194 | 23428 | 23537 | 24331 | 24316 | 64282 | 23647 | 23884 | 64429 | 23961 | 64409 | 59849 | 24077 | 64284 | 64032 | 23644 | 24279 | 24190 | 23880 | 59945 | 63902 | 23963 | 24340 | 24274 | 23782 | 23781 | 23290 | 24039 | 24193 => 8193,
    59771 | 17188 | 59923 | 161 | 18996 | 59899 | 19001 | 19060 | 18869 | 17317 | 16799 | 18864 | 18722 | 17231 | 17384 | 18669 | 162 | 18906 | 59895 | 18907 | 19065 | 19019 | 17189 | 17338 | 18665 | 18865 | 19018 | 16984 | 17047 | 17343 | 59767 | 18868 | 19023 | 17043 | 16988 | 59900 | 17185 | 18475 | 16989 | 18727 | 59952 | 16795 | 17184 | 59896 | 18726 | 165 | 19000 | 17385 | 1 | 19061 | 18479 | 166 | 17320 | 18911 | 18664 | 17042 | 183 | 18478 | 18668 | 18997 | 16985 | 17227 | 17046 | 17226 | 18723 | 59621 | 17230 | 19064 | 93 | 17342 | 17321 | 59770 | 19022 | 17380 | 18474 | 59766 | 59732 | 17339 | 16798 | 18910 | 17381 | 17316 | 16794 => 771,
    0 | 185 | 3 | 182 => 65535,
    19121 | 19118 | 19318 | 19137 | 19322 | 62289 | 19071 | 62035 | 19916 | 19336 | 19084 | 19285 | 19323 | 59653 | 20119 | 19907 | 55235 | 19920 | 20055 | 62134 | 19335 | 20064 | 19868 | 11 | 20106 | 20121 | 20068 | 19850 | 59764 | 19902 | 19080 | 120 | 19921 | 19332 | 20069 | 55196 | 19869 | 19855 | 19271 | 19066 | 19867 | 59632 | 62113 | 19070 | 20102 | 19854 | 19132 | 19284 | 55376 | 19864 | 19135 | 19280 | 20105 | 20107 | 19266 | 59934 | 55101 | 59755 | 20053 | 20054 | 19083 | 19069 | 20067 | 20120 | 19919 | 59662 | 19906 | 19123 | 55226 | 62007 | 62044 | 19269 | 19905 | 19337 | 19122 | 20050 | 19136 | 19085 | 19321 | 19270 | 19853 | 20116 | 19283 | 55205 => 17,
    175 | 24913 | 25384 | 25332 | 25274 | 24917 | 25275 | 24781 | 24358 | 25210 | 25328 | 24806 | 24804 | 25019 | 25383 | 25331 | 24506 | 24648 | 25113 | 25016 | 25329 | 172 | 24359 | 25110 | 25212 | 25334 | 24508 | 25326 | 25109 | 177 | 24782 | 25401 | 24916 | 24803 | 24355 | 24650 | 25400 | 25271 | 24509 | 25272 | 174 | 25398 | 25018 | 44 | 45 | 25143 | 25386 | 24914 | 24784 | 24647 | 25015 | 24807 | 24651 | 25362 | 25397 | 25140 | 25325 | 25142 | 25361 | 24785 | 25112 | 25139 | 25213 | 25365 | 47 | 25335 | 25209 | 25364 | 24356 | 24505 | 42 | 25387 => 16385,
    55236 | 8 | 59650 | 121 | 62036 | 55232 | 59633 | 59765 | 55382 | 55118 | 59654 | 55098 | 62140 | 59761 | 59756 | 59663 | 55107 | 55227 | 55206 | 62013 | 55202 | 59752 | 62032 | 62286 | 55102 | 62004 | 59935 | 55373 | 12 | 62110 | 62290 | 62041 | 62114 | 59931 | 55223 | 62131 | 59629 | 55393 | 62299 | 59659 | 55377 | 62135 | 62008 | 62279 | 62045 | 55197 | 117 | 55193 => 51,
    55100 | 78 | 55179 | 59754 | 35 | 59763 | 86 | 55204 | 59715 | 59721 | 59661 | 62098 | 62054 | 59719 | 55125 | 59723 | 62100 | 55185 | 55182 | 62055 | 55177 | 62099 | 62102 | 59933 | 55136 | 62056 | 62052 | 62094 | 55375 | 55187 | 59725 | 59944 | 55133 | 62096 | 62288 | 59717 | 84 | 62058 | 10 | 59652 | 62133 | 55129 | 62050 | 62104 | 55130 | 62105 | 55127 | 55183 | 80 | 59672 | 55225 | 81 | 62112 | 59631 | 76 | 55131 | 55195 | 55234 | 87 | 59720 | 55181 | 62060 | 62061 | 55188 | 82 | 119 | 59726 | 62043 | 62006 | 55135 | 62034 => 33,
    59733 | 59622 | 59953 | 32 | 27 | 59664 | 94 | 59936 | 59941 | 59940 | 59666 | 59938 | 59669 | 59668 | 59924 | 31 | 29 => 4641,
    62301 | 62015 | 62281 | 62142 => 34833,
    55395 | 55120 | 55384 | 55109 => 85,
    16 | 20937 | 21174 | 20940 | 20190 | 20973 | 20135 | 20649 | 20643 | 20591 | 15 | 20646 | 20132 | 20967 | 20154 | 20976 | 20974 | 20610 | 20970 | 20645 | 21138 | 20187 | 20639 | 20977 | 158 | 20613 | 155 | 13 | 20588 | 21141 | 20156 | 20918 | 20134 | 20612 | 20916 | 21171 | 20938 | 21177 | 20131 | 20968 | 21119 | 20640 | 20183 | 20642 | 18 | 21116 | 21137 | 21170 | 20184 | 21168 | 20971 | 20157 | 21176 | 20941 | 21118 | 21140 | 20153 | 20192 | 20193 | 20186 | 20189 | 20919 | 21173 | 21167 | 160 | 157 | 20590 | 20915 | 20587 | 21115 | 20648 | 20609 => 9,
    184 | 2 => 26265,
    111 => 17425,
    142 | 144 | 146 | 145 => 9225,
    109 | 112 => 52275,
    17892 | 59113 | 58279 | 59549 | 18716 | 58222 | 5164 | 5099 | 58750 | 16291 | 15973 | 4548 | 15972 | 17356 | 17980 | 16484 | 17698 | 57448 | 59363 | 59415 | 18871 | 59366 | 17587 | 16305 | 16229 | 18889 | 59131 | 16588 | 59800 | 62042 | 62151 | 17244 | 16032 | 17600 | 57750 | 16812 | 57515 | 4296 | 58243 | 57752 | 18420 | 58326 | 15763 | 58229 | 59349 | 59605 | 4877 | 18184 | 58228 | 16788 | 58028 | 59020 | 17692 | 18403 | 16481 | 4287 | 18416 | 59293 | 16471 | 17961 | 62155 | 18488 | 15725 | 57771 | 59326 | 59116 | 4487 | 59126 | 4339 | 18741 | 55351 | 15772 | 59566 | 57951 | 15911 | 4584 | 59902 | 5317 | 16775 | 57950 | 59401 | 18527 | 58784 | 4297 | 15707 | 17601 | 18170 | 4535 | 58803 | 17699 | 58478 | 16195 | 18217 | 16284 | 18489 | 59787 | 16851 | 15773 | 58834 | 58584 | 15976 | 16199 | 62033 | 57701 | 59297 | 57937 | 58312 | 57658 | 4497 | 16536 | 18702 | 16593 | 16592 | 62111 | 16809 | 16723 | 17679 | 16741 | 58821 | 57733 | 16792 | 5062 | 18885 | 59292 | 18531 | 16500 | 55203 | 17204 | 57736 | 17967 | 58208 | 58530 | 5112 | 17970 | 62259 | 59753 | 17027 | 17638 | 58789 | 16304 | 18459 | 59096 | 59296 | 5113 | 16578 | 18721 | 18202 | 17453 | 15998 | 4774 | 57663 | 17965 | 55321 | 18760 | 16574 | 16579 | 55374 | 58841 | 5150 | 17195 | 17026 | 16301 | 18468 | 4867 | 59055 | 59353 | 16789 | 59651 | 57770 | 5313 | 17400 | 4790 | 18455 | 5067 | 18530 | 62005 | 4575 | 16219 | 16470 | 18493 | 5098 | 18492 | 58223 | 58022 | 17674 | 17357 | 59567 | 5081 | 58517 | 15710 | 18421 | 58798 | 5060 | 58599 | 17984 | 58747 | 5057 | 16014 | 59092 | 58023 | 58460 | 58465 | 59025 | 17041 | 59784 | 4500 | 59600 | 59034 | 16526 | 17604 | 4282 | 17899 | 58330 | 58261 | 58835 | 17946 | 18706 | 4861 | 5312 | 59563 | 17591 | 58858 | 15962 | 5063 | 57645 | 15776 | 58603 | 4856 | 5076 | 16228 | 4553 | 58238 | 17456 | 58029 | 57946 | 17964 | 58018 | 57732 | 57746 | 18150 | 58526 | 55337 | 57757 | 17874 | 5103 | 62280 | 58009 | 58004 | 59762 | 16466 | 59059 | 58019 | 17913 | 4571 | 16485 | 59330 | 59604 | 15724 | 16779 | 59404 | 5042 | 17245 | 17709 | 4843 | 57970 | 18746 | 18255 | 4788 | 59039 | 18541 | 16861 | 18454 | 59601 | 59562 | 59054 | 4860 | 17063 | 18259 | 57957 | 4588 | 58205 | 58551 | 17404 | 16793 | 18146 | 15920 | 57766 | 62170 | 58512 | 16013 | 5355 | 58799 | 17693 | 18268 | 16864 | 57497 | 58461 | 59035 | 4609 | 57715 | 18924 | 57449 | 18761 | 17191 | 18166 | 59110 | 16198 | 55335 | 59418 | 15910 | 18272 | 17893 | 5369 | 17442 | 5061 | 58264 | 17656 | 18147 | 58224 | 17888 | 59352 | 15906 | 18161 | 4283 | 17875 | 15907 | 18165 | 17401 | 18473 | 5351 | 18740 | 5364 | 17694 | 17878 | 58043 | 16726 | 4866 | 4794 | 17951 | 59803 | 17037 | 18540 | 57458 | 5299 | 5077 | 15762 | 59107 | 58602 | 59552 | 57648 | 57947 | 16008 | 17022 | 17390 | 5302 | 18747 | 16501 | 18757 | 57971 | 58825 | 59112 | 19036 | 55318 | 58239 | 58327 | 4538 | 17966 | 62260 | 57463 | 15977 | 57511 | 4804 | 4483 | 16286 | 55194 | 16860 | 17971 | 59111 | 58746 | 4808 | 17353 | 4300 | 5047 | 4857 | 17386 | 57662 | 59045 | 16527 | 57936 | 17077 | 16290 | 59781 | 16540 | 17023 | 4846 | 16505 | 59785 | 59548 | 17889 | 5169 | 4539 | 16480 | 19037 | 57714 | 5117 | 18884 | 16808 | 59804 | 59021 | 15924 | 58732 | 58527 | 59127 | 58025 | 15921 | 17657 | 17879 | 58464 | 4862 | 58008 | 59799 | 4590 | 59311 | 118 | 17387 | 4791 | 58474 | 59313 | 5080 | 58005 | 17080 | 59614 | 4482 | 62269 | 4770 | 5154 | 16491 | 16722 | 17060 | 62169 | 16865 | 18720 | 57711 | 5298 | 59331 | 16271 | 4789 | 58209 | 17708 | 168 | 4605 | 57649 | 5066 | 18703 | 59058 | 16015 | 16285 | 17908 | 16018 | 57710 | 59040 | 55394 | 16490 | 58824 | 62165 | 58274 | 59630 | 17040 | 18736 | 58546 | 4771 | 5354 | 4795 | 4501 | 18171 | 18870 | 17056 | 58845 | 4352 | 58736 | 62263 | 59130 | 59553 | 4805 | 5365 | 16850 | 57753 | 59097 | 62141 | 55108 | 16487 | 57445 | 18269 | 18151 | 17352 | 58331 | 17194 | 15995 | 18743 | 57751 | 59400 | 17894 | 110 | 15777 | 16009 | 17443 | 16213 | 55342 | 5102 | 17586 | 59414 | 4591 | 24 | 59312 | 18207 | 58550 | 17642 | 16019 | 59367 | 62265 | 58531 | 59419 | 18921 | 55355 | 57956 | 16847 | 59038 | 18875 | 58219 | 55383 | 17208 | 4881 | 16740 | 5116 | 18406 | 57501 | 18221 | 55119 | 4863 | 18167 | 55331 | 59619 | 4842 | 16774 | 62287 | 5165 | 16778 | 17898 | 15758 | 57496 | 18181 | 57697 | 16737 | 59306 | 18742 | 4338 | 16287 | 58479 | 58547 | 58265 | 59316 | 57659 | 15994 | 58588 | 18402 | 59307 | 18216 | 16233 | 58840 | 59106 | 5155 | 5168 | 18254 | 16270 | 17405 | 17689 | 58788 | 4585 | 4595 | 16813 | 16846 | 18203 | 4534 | 5056 | 57510 | 15963 | 16232 | 18417 | 16736 | 16300 | 58242 | 16028 | 17241 | 58733 | 57756 | 16504 | 18544 | 17590 | 58533 | 58225 | 18874 | 17076 | 16218 | 59310 | 17439 | 58785 | 58802 | 16266 | 16208 | 15720 | 15999 | 17066 | 18472 | 58317 | 18273 | 4604 | 4574 | 4880 | 17190 | 18545 | 58536 | 55352 | 18717 | 4552 | 4876 | 59618 | 58838 | 16267 | 5151 | 17061 | 17981 | 58039 | 57747 | 57767 | 58278 | 4785 | 4486 | 17240 | 16029 | 16537 | 57737 | 58537 | 17950 | 59327 | 62270 | 5350 | 4549 | 57953 | 57932 | 15925 | 17678 | 4594 | 58855 | 58854 | 55317 | 17653 | 58516 | 17036 | 5046 | 58024 | 58218 | 4286 | 57644 | 58513 | 62264 | 16589 | 4496 | 15706 | 4335 | 17205 | 18920 | 55356 | 17391 | 58844 | 16214 | 18258 | 4570 | 57500 | 17912 | 18458 | 55341 | 16280 | 4775 | 18407 | 18756 | 57966 | 16212 | 55322 | 4349 | 17712 | 17895 | 18737 | 62152 | 55338 | 17909 | 58313 | 58532 | 16209 | 15959 | 59932 | 17652 | 16523 | 17639 | 17985 | 59348 | 17057 | 4784 | 18185 | 59780 | 59024 | 17209 | 55224 | 17452 | 59117 | 15958 | 17675 | 17960 | 58589 | 59405 | 17062 | 4348 | 5368 | 4589 | 16467 | 57933 | 17081 | 18206 | 58204 | 16281 | 55336 | 4847 | 16215 | 18888 | 58475 | 57696 | 17605 | 55332 | 4334 | 18526 | 15759 | 16727 | 5316 | 55233 | 18180 | 62266 | 57967 | 57444 | 18160 | 16541 | 16012 | 4608 | 4301 | 18707 | 18925 | 5043 | 58585 | 62300 | 15711 | 17643 | 4353 | 59362 | 16033 | 62132 | 58751 | 58820 | 58737 | 17438 | 62014 | 19032 | 59615 | 17067 | 17688 | 58598 | 58275 | 5303 | 59044 | 17713 | 16194 | 55099 | 62166 | 57462 | 16522 | 58038 | 62156 | 59093 | 18220 | 19033 | 15721 | 58839 | 16575 | 57514 | 58316 | 57700 | 16486 | 4809 | 9 | 17947 | 17695 | 18164 | 58859 | 58260 | 59041 | 17457 | 59317 | 57459 | 18469 | 59660 | 58042 | 57952 => 3,
    59623 | 59925 | 95 | 59734 | 59954 => 8721,
    33 | 59670 | 59674 | 59942 | 59946 | 37 => 8481,
};

pub struct LookupSymEdgeGroupOrientTable(Mmap);

impl LookupSymEdgeGroupOrientTable {
    pub fn get_rep_from_sym(&self, sym_coord: EdgeGroupOrientSymCoord) -> EdgeGroupOrientRawCoord {
        let buffer = as_u32_slice(&self.0);
        EdgeGroupOrientRawCoord(buffer[sym_coord.0 as usize])
    }

    pub fn get_raw_from_combo(
        &self,
        combo_coord: EdgeGroupOrientComboCoord,
    ) -> EdgeGroupOrientRawCoord {
        EdgeGroupOrient::from_coord(self.get_rep_from_sym(combo_coord.sym_coord))
            .domino_conjugate(combo_coord.domino_conjugation.inverse())
            .into_coord()
    }

    pub fn get_combo_from_raw(
        &self,
        raw_coord: EdgeGroupOrientRawCoord,
    ) -> EdgeGroupOrientComboCoord {
        let buffer = as_u32_slice(&self.0);
        let edge_group_orient = EdgeGroupOrient::from_coord(raw_coord);
        let (rep_coord, domino_conjugation) = DominoSymmetry::all_iter()
            .map(|sym| (edge_group_orient.domino_conjugate(sym).into_coord(), sym))
            .min_by_key(|x| x.0)
            .unwrap();

        EdgeGroupOrientComboCoord {
            sym_coord: EdgeGroupOrientSymCoord(buffer.binary_search(&rep_coord.0).unwrap() as u16),
            domino_conjugation,
        }
    }

    /// includes the identity
    pub fn get_all_stabilizing_conjugations(
        sym_coord: EdgeGroupOrientSymCoord,
    ) -> impl IntoIterator<Item = DominoSymmetry> {
        let mask = STABILIZING_CONJUGATIONS.get(&sym_coord.0).copied().unwrap_or(1);

        DominoSymmetry::all_iter()
            .filter(move |sym| (mask >> sym.0) & 1 == 1)
    }

    fn generate(buffer: &mut [u8]) {
        let buffer = as_u32_slice_mut(buffer);
        let reps = (0u32..(2048 * 495)).into_par_iter().map(|i| {
            let raw_coord = EdgeGroupOrientRawCoord(i);
            let edge_group_orient = EdgeGroupOrient::from_coord(raw_coord);
            DominoSymmetry::all_iter()
                .map(|sym| edge_group_orient.domino_conjugate(sym).into_coord())
                .min()
                .unwrap()
        });

        for (i, rep) in collect_unique_sorted_parallel(reps).enumerate() {
            buffer[i] = rep.0
        }

        debug_assert!(buffer.is_sorted())
    }

    pub fn load<P: AsRef<Path>>(path: P) -> Result<Self> {
        load_table(path, TABLE_SIZE_BYTES, FILE_CHECKSUM, |buf| {
            Self::generate(buf)
        })
        .map(Self)
    }
}

#[cfg(test)]
mod test {
    use std::collections::HashMap;

    use itertools::Itertools;

    use crate::tables::Tables;

    use super::*;

    #[test]
    fn round_trip() -> anyhow::Result<()> {
        let tables = Tables::new("tables")?;

        let table = &tables.lookup_sym_edge_group_orient;

        for i in 0..(495 * 2048) {
            let raw = EdgeGroupOrientRawCoord(i);
            let combo = table.get_combo_from_raw(raw);
            let raw_again = table.get_raw_from_combo(combo);

            assert_eq!(raw, raw_again);
        }

        Ok(())
    }

    #[test]
    fn test_stabilizing_conjugations() -> anyhow::Result<()> {
        let tables = Tables::new("tables")?;

        println!("{:?}", STABILIZING_CONJUGATIONS.len());

        (0..64430).into_par_iter().for_each(|i| {
            let sym = EdgeGroupOrientSymCoord(i);
            let rep = tables.lookup_sym_edge_group_orient.get_rep_from_sym(sym);
            let group_orient = EdgeGroupOrient::from_coord(rep);
            for s in LookupSymEdgeGroupOrientTable::get_all_stabilizing_conjugations(sym) {
                assert_eq!(group_orient, group_orient.domino_conjugate(s))
            }
        });

        Ok(())
    }

    #[test]
    fn check_for_stabilizing_conj() -> anyhow::Result<()> {
        let tables = Tables::new("tables")?;

        // 2033 of the 64430 sym coords have nontrivial stabilizing symmetries
        // there are 26 possible cardinalities

        let nonzero_count: HashMap<_, _> = (0..64430).into_par_iter().map(|i| {
            let sym = EdgeGroupOrientSymCoord(i);
            let rep = tables.lookup_sym_edge_group_orient.get_rep_from_sym(sym);
            let group_orient = EdgeGroupOrient::from_coord(rep);

            (sym.0, DominoSymmetry::all_iter().fold(0u16, |acc, sym| {
                acc | ((group_orient == group_orient.domino_conjugate(sym)) as u16) << sym.0
            }))
        }).filter(|x| x.1 != 1).collect();

        let mut reversed: HashMap<u16, Vec<u16>> = HashMap::new();

        for (k, v) in nonzero_count {
            reversed.entry(v).or_default().push(k);
        }

        let mut out_string = "static STABILIZING_CONJUGATIONS: phf::Map<u16, u16> = phf::phf_map! {\n".to_string();
        for (k, v) in reversed {
            out_string.push_str(&format!("    {} => {},\n", v.into_iter().map(|x| format!("{x}")).join(" | "), k));
        }
        out_string.push_str("};");

        println!("{out_string}");

        Ok(())
    }
}
